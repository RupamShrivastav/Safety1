// Generated by view binder compiler. Do not edit!
package com.example.safety.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.safety.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdatePhoneNumberDialogBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton cancelPhoneNumberBtn;

  @NonNull
  public final TextView currentPhoneNumber;

  @NonNull
  public final MaterialButton updatePhoneNumberBtn;

  @NonNull
  public final TextInputLayout updatedPhoneNumber;

  private UpdatePhoneNumberDialogBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton cancelPhoneNumberBtn, @NonNull TextView currentPhoneNumber,
      @NonNull MaterialButton updatePhoneNumberBtn, @NonNull TextInputLayout updatedPhoneNumber) {
    this.rootView = rootView;
    this.cancelPhoneNumberBtn = cancelPhoneNumberBtn;
    this.currentPhoneNumber = currentPhoneNumber;
    this.updatePhoneNumberBtn = updatePhoneNumberBtn;
    this.updatedPhoneNumber = updatedPhoneNumber;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdatePhoneNumberDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdatePhoneNumberDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_phone_number_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdatePhoneNumberDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelPhoneNumberBtn;
      MaterialButton cancelPhoneNumberBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelPhoneNumberBtn == null) {
        break missingId;
      }

      id = R.id.currentPhoneNumber;
      TextView currentPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (currentPhoneNumber == null) {
        break missingId;
      }

      id = R.id.updatePhoneNumberBtn;
      MaterialButton updatePhoneNumberBtn = ViewBindings.findChildViewById(rootView, id);
      if (updatePhoneNumberBtn == null) {
        break missingId;
      }

      id = R.id.updatedPhoneNumber;
      TextInputLayout updatedPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (updatedPhoneNumber == null) {
        break missingId;
      }

      return new UpdatePhoneNumberDialogBinding((MaterialCardView) rootView, cancelPhoneNumberBtn,
          currentPhoneNumber, updatePhoneNumberBtn, updatedPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
